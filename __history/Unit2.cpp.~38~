//---------------------------------------------------------------------------
#include <vcl.h>
#pragma hdrstop
#include <string>
#include <stdlib.h>
#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
using namespace std;
#include "Unit2.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
int r=5,w1,h1,w2,h2,W,H,w3,h3,w4,h4,w5,h5,
x,y,x1,y1,x2,y2,x3,y3,x4,y4,x5,y5,
j,l1,l2,i,n1,n2,n=20, m=20,n3,k=0,
flag1,flag2,flag,k1,k2,k3,q,flag3,flag4,q2;
string st;
std::ifstream fin("map1.txt");
std::ifstream fin1("map.txt");
std::ifstream fin2("output1.txt");
std::ofstream fout("output.txt");
std::ofstream fout1("output1.txt");
Graphics::TBitmap
*kadr1=new Graphics::TBitmap(),*kadr=new Graphics::TBitmap(),
*ris=new Graphics::TBitmap(),*fon=new Graphics::TBitmap(),
*fish=new Graphics::TBitmap(),*pt=new Graphics::TBitmap(),
*fon_pt=new Graphics::TBitmap(),*pyl=new Graphics::TBitmap(),
*fon_fish=new Graphics::TBitmap(),*fon_pyl=new Graphics::TBitmap(),
*Fon1=new Graphics::TBitmap();
 //*kadr_fon2=new Graphics::TBitmap(), *fon_fon1=new Graphics::TBitmap(),
 //*kadr_fon1=new Graphics::TBitmap(),*fon_fon2=new Graphics::TBitmap();
TRect Pr_fon, Pr_kadr, Pr_kadr1,Pr_kadr2,Pr_fish,Pr_fon_fish,
Pr_ris,Pr_ris1;
 //Pr_fon_fon1, Pr_kadr_fon1,Pr_fon_fon2, Pr_kadr_fon2,Pr_fon_pr, Pr_kadr_pr;
int a[20][20]={
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,
0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,3,0,0,2,3,0,0,0,0,4,4,0,3,0,4,4,0,5,
1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
0,0,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,
0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,1,1,0,0,1,1,0,0,2,0,0,0,0,0,1,
1,0,0,1,1,0,0,1,1,1,1,0,0,2,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,4,4,0,0,1,
1,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,
1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,
1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,};
int a2[20],a3[20],a4[20],X[20],Y[20],b[400],B[20][20],
b2[20],b3[20],b4[20],X2[20],Y2[20];
TRect Pr_fon_pt[20], Pr_kadr_pt[20],Pr_fon_pyl[20], Pr_kadr_pyl[20];

//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
	H = Image1-> Height;
	W = Image1 -> Width;
	Fon1 ->LoadFromFile("bitb.BMP");
	w2= W/20;
	h2=H/20;
	ris -> LoadFromFile("an13.BMP");
	fish ->LoadFromFile("fish1.BMP");
	pt->LoadFromFile("pt.BMP");
	pyl->LoadFromFile("pyl.BMP");
	kadr1 -> Transparent = true;
	fish -> Transparent = true;
	pyl -> Transparent = true;
	pt -> Transparent = true;
	w1 = ris -> Width/3;
	h1 = ris -> Height/13;
	w3 = pt -> Width;
	h3 = pt -> Height;
	w5 = pyl -> Width;
	h5 = pyl -> Height;
	w4 = fish -> Width;
	h4 = fish -> Height;
	x1 = 0;
	y1=H/2-h1;
	  while ( !fin.eof() )
	  {
		getline(fin,st);
		for (i=0;i<st.length();i++)
		b[i]=StrToInt(st[i]);
	  }
	  for (int i=0;i<400;i++)
		fout1<<b[i]<<endl;
		for (i = 0; i < 20; i++)
			for (j = 0; j < 20; j++)
		fin2>>B[i][j];
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormKeyPress(TObject *Sender, wchar_t &Key)
{
	if(Key==32)
		Timer1->Enabled=true;
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer1Timer(TObject *Sender)//up
{
	if((Timer3->Enabled==false)&&(Timer4->Enabled==false))
	{
		Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
		y1--;
		k1++;
		if (y1 < Image1 -> Width)
			Pr_fon = Bounds (x1,y1, w1, h1);
		fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
		y+=h1;
		if (y > 11*h1)
			y=0;
		Pr_ris = Bounds(0, y+3,w1, h1);
		kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
		Image1 -> Canvas -> Draw(x1,y1,kadr1);
		if (k1 >1.5*h1)
		{
			Timer2->Enabled=true;
			Timer1->Enabled=false;
			k1=0;
		}
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				x4=x2+w2/2;
				y4=y2+h2/2;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==1)) //stop
				{
					Timer2->Enabled=true;
					Timer1->Enabled=false;
					k1=0;
				}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))//fish
				{
					k2++;
					Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
					a[i][j]=0;
					Image1->Canvas->Brush->Color = clBlue;
					Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
				}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i+1][j]==2)&&(flag3==1))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i+1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2+h1,fon_pt);
						}
						if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i-1][j]==2)&&(flag3==0))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i-1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2-h1,fon_pt);
						}

						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==2)&&(a[i][j+1]==2)&&(flag4==0))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==4)&&(a[i][j-1]==4)&&(flag4==1))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
			}
	}
	if(Timer3->Enabled==true)
	{
		Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
		y1--;
		x1++;
		k1++;
		if (x1 > Image1 -> Width)
			x1 = -w1;
		if (y1 < Image1 -> Width)
			Pr_fon = Bounds (x1,y1, w1, h1);
		fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
		y+=h1;
		if (y > 11*h1)
			y=0;
		Pr_ris = Bounds(0, y+3,w1, h1);
		kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
		Image1 -> Canvas -> Draw(x1,y1,kadr1);
		if (k1 >1.5*h1)
		{
			Timer2->Enabled=true;
			Timer1->Enabled=false;
			k1=0;
		}
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				x4=x2+w2/2;
				y4=y2+h2/2;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==1))  //
				{
					Timer2->Enabled=true;
					Timer1->Enabled=false;
					k1=0;
				}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
				{
					k2++;
					Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
					a[i][j]=0;
					Image1->Canvas->Brush->Color = clBlue;
					Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
				}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i+1][j]==2)&&(flag3==1))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i+1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2+h1,fon_pt);
						}
						if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i-1][j]==2)&&(flag3==0))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i-1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2-h1,fon_pt);
						}

						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==2)&&(a[i][j+1]==2)&&(flag4==0))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==4)&&(a[i][j-1]==4)&&(flag4==1))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==5))
				{
					if (flag==1)
					{
						Timer3->Enabled=false;
						flag1=1;
					}
					if (flag==0)
					{
						Label1->Visible=true;
						Image1->Canvas->Brush->Color = clGreen;
						Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
					}
				}
			}
	}
	if(Timer4->Enabled==true)
	{
		Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
		y1--;
		x1--;
		k1++;
		if (x1 < 0 )
			x1 = Image1 -> Width+w1;
		if (y1 < Image1 -> Width)
			Pr_fon = Bounds (x1,y1, w1, h1);
		fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
		y+=h1;
		if (y > 11*h1)
			y=0;
		Pr_ris = Bounds(0, y+3,w1, h1);
		Pr_ris1.Left=Pr_ris.Right;
		Pr_ris1.Right=Pr_ris.Left;
		Pr_ris1.Top=Pr_ris.Top;
		Pr_ris1.Bottom=Pr_ris.Bottom;
		kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris1);
		Image1 -> Canvas -> Draw(x1,y1,kadr1);
		if (k1>1.5*h1)
		{
			Timer2->Enabled=true;
			Timer1->Enabled=false;
			k1=0;
		}
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				x4=x2+w2/2;
				y4=y2+h2/2;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==1))  ////////////////
				{
					Timer2->Enabled=true;
					Timer1->Enabled=false;
					k1=0;
				}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
				{
					k2++;
					Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
					a[i][j]=0;
					Image1->Canvas->Brush->Color = clBlue;
					Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
				}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i+1][j]==2)&&(flag3==1))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i+1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2+h1,fon_pt);
						}
						if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i-1][j]==2)&&(flag3==0))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i-1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2-h1,fon_pt);
						}

						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==2)&&(a[i][j+1]==2)&&(flag4==0))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==4)&&(a[i][j-1]==4)&&(flag4==1))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==5))
				{
					if (flag==1)
					{
						Timer3->Enabled=false;
						flag1=1;
					}
					if (flag==0)
					{
						Timer3->Enabled=true;
						flag1=0;
						Label1->Visible=true;
						Image1->Canvas->Brush->Color = clGreen;
						Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
					}
				}
			}
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer2Timer(TObject *Sender)//down
{
	Timer1->Enabled=false;
	if((Timer3->Enabled==false)&&(Timer4->Enabled==false))
	{
		Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
		y1++;
		if (y1 < Image1 -> Width)
			Pr_fon = Bounds (x1,y1, w1, h1);
		fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
		y+=h1;
		if (y > 11*h1)
			y=0;
		Pr_ris = Bounds(0, y+3,w1, h1);
		kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
		Image1 -> Canvas -> Draw(x1,y1,kadr1);
			for (int i=0; i<m; i++)
				for (int j=0; j<n; j++)
				{
					y2=h2*i;
					x2=w2*j;
					x4=x2+w2/2;
					y4=y2+h2/2;
					if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2-h2)&&(y1<=y2)&&(a[i][j]==1))
						Timer2->Enabled=false;
					if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
					{
						k2++;
						Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
						a[i][j]=0;
						Image1->Canvas->Brush->Color = clBlue;
						Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					}
					if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i+1][j]==2)&&(flag3==1))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i+1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2+h1,fon_pt);
						}
						if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i-1][j]==2)&&(flag3==0))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i-1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2-h1,fon_pt);
						}

						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==2)&&(a[i][j+1]==2)&&(flag4==0))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==4)&&(a[i][j-1]==4)&&(flag4==1))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
				}
	}
	if(Timer3->Enabled==true)
	{
		Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
		y1++;
		x1++;
		if (x1 > Image1 -> Width)
			x1 = -w1;
		if (y1 < Image1 -> Width)
			Pr_fon = Bounds (x1,y1, w1, h1);
		fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
		y+=h1;
		if (y > 11*h1)
			y=0;
		Pr_ris = Bounds(0, y+3,w1, h1);
		kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
		Image1 -> Canvas -> Draw(x1,y1,kadr1);
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				x4=x2+w2/2;
				y4=y2+h2/2;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2-h2)&&(y1<=y2)&&(a[i][j]==1))
					Timer2->Enabled=false;
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
				{
					k2++;
					Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
					a[i][j]=0;
					Image1->Canvas->Brush->Color = clBlue;
					Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
				}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i+1][j]==2)&&(flag3==1))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i+1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2+h1,fon_pt);
						}
						if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i-1][j]==2)&&(flag3==0))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i-1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2-h1,fon_pt);
						}

						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==2)&&(a[i][j+1]==2)&&(flag4==0))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==4)&&(a[i][j-1]==4)&&(flag4==1))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==5))
					{
						if (flag==1)
						{
							Timer3->Enabled=false;
							flag1=1;
						}
						if (flag==0)
						{
							Label1->Visible=true;
							Image1->Canvas->Brush->Color = clGreen;
							Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
						}
					}
			}
	}
	if(Timer4->Enabled==true)
	{
		Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
		y1++;
		x1--;
		if (x1 < 0 )
			x1 = Image1 -> Width;
		if (y1 < Image1 -> Width)
			Pr_fon = Bounds (x1,y1, w1, h1);
		fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
		y+=h1;
		if (y > 11*h1)
			y=0;
		Pr_ris = Bounds(0, y+3,w1, h1);
		Pr_ris1.Left=Pr_ris.Right;
		Pr_ris1.Right=Pr_ris.Left;
		Pr_ris1.Top=Pr_ris.Top;
		Pr_ris1.Bottom=Pr_ris.Bottom;
		kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris1);
		Image1 -> Canvas -> Draw(x1,y1,kadr1);
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				x4=x2+w2/2;
				y4=y2+h2/2;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2-h2)&&(y1<=y2)&&(a[i][j]==1))
					Timer2->Enabled=false;
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
				{
					k2++;
					Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
					a[i][j]=0;
					Image1->Canvas->Brush->Color = clBlue;
					Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
				}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i+1][j]==2)&&(flag3==1))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i+1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2+h1,fon_pt);
						}
						if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i-1][j]==2)&&(flag3==0))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i-1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2-h1,fon_pt);
						}

						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==2)&&(a[i][j+1]==2)&&(flag4==0))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==4)&&(a[i][j-1]==4)&&(flag4==1))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==5))
					{
						if (flag==1)
						{
							Timer3->Enabled=false;
							flag1=1;
						}
						if (flag==0)
						{
							Label1->Visible=true;
							Image1->Canvas->Brush->Color = clGreen;
							Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
						}
					}
			}
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormKeyUp(TObject *Sender, WORD &Key, TShiftState Shift)//stop

{
	if(Key==77)
		Timer3->Enabled=false;
	if (Key==78)
		Timer4->Enabled=false;
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormKeyDown(TObject *Sender, WORD &Key, TShiftState Shift)//move
{
	if((Key==77)&&(flag1==0))
	{
		Timer3->Enabled=true;
		flag2=0;
	}
	if ((Key==78)&&(flag2==0))
	{
		Timer4->Enabled=true;
		flag1=0;
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer3Timer(TObject *Sender)//right
{
Label3->Caption=IntToStr(flag3);
	if((Timer1->Enabled==false)&&(Timer2->Enabled==false))
	{
		Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
		x1++;
		if (x1 > Image1 -> Width)
			x1 = -w1;
		Pr_fon = Bounds (x1,y1, w1, h1);
		fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
		y+=h1;
		if (y > 11*h1)
			y=0;
		Pr_ris = Bounds(2*w1, y+3,w1, h1);
		kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
		Image1 -> Canvas -> Draw(x1,y1,kadr1);
			for (int i=0; i<m; i++)
				for (int j=0; j<n; j++)
				{
					y2=h2*i;
					x2=w2*j;
					x4=x2+w2/2;
					y4=y2+h2/2;
					if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
					{
					  x4=x2+w2/2;
					  y4=y2+h2/2;
					  k2++;
					  Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
					  a[i][j]=0;
					  Image1->Canvas->Brush->Color = clBlue;
					  Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					  Image1 -> Canvas -> Draw(x2,y2,fon_fish);
					}
					if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i+1][j]==2)&&(flag3==1))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i+1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2+h1,fon_pt);
						}
						if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i-1][j]==2)&&(flag3==0))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i-1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2-h1,fon_pt);
						}

						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==2)&&(a[i][j+1]==2)&&(flag4==0))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
							BitBtn1->Visible=true;
						}
						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==4)&&(a[i][j-1]==4)&&(flag4==1))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
							BitBtn1->Visible=true;
						}
					if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==1))
					{
						flag1=1;
						Timer3->Enabled=false;
					}
					if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==5))
					{
						if (flag==1)
						{
							Timer3->Enabled=false;
							flag1=1;
						}
						if (flag==0)
						{
							Label1->Visible=true;
							Image1->Canvas->Brush->Color = clGreen;
							Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
							BitBtn2->Visible=true;
						}
					}
					if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1-h2>=y2)&&(y1-h2<=y2+h2)&&(a[i][j]==1))
					{
						flag1=1;
						Timer3->Enabled=false;
					}
					if((x1+w1>=x2)&&(x1+w2<=x2+w2)&&(y1>=y2-h2)&&(y1<=y2)&&(a[i][j]!=1))
						Timer2->Enabled=true;
				}
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer4Timer(TObject *Sender)//levo
{
	if((Timer1->Enabled==false)&&(Timer2->Enabled==false))
	{
		Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
		x1--;
		if (x1 < 0 )
			x1 = Image1 -> Width+w1;
		Pr_fon = Bounds (x1,y1, w1, h1);
		fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
		y+=h1;
		if (y > 11*h1)
			y=0;
		Pr_ris = Bounds(2*w1, y+3,w1, h1);
		Pr_ris1.Left=Pr_ris.Right;
		Pr_ris1.Right=Pr_ris.Left;
		Pr_ris1.Top=Pr_ris.Top;
		Pr_ris1.Bottom=Pr_ris.Bottom;
		kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris1);
		Image1 -> Canvas -> Draw(x1,y1,kadr1);
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				x4=x2+w2/2;
				y4=y2+h2/2;
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
				{
					k2++;
					Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
					a[i][j]=0;
					Image1->Canvas->Brush->Color = clBlue;
					Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
				}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i+1][j]==2)&&(flag3==1))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i+1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2+h1,fon_pt);
						}
						if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&
						(a[i][j]==2)&&(a[i-1][j]==2)&&(flag3==0))
						{

							k2+=2;
							Label3->Caption=IntToStr(flag3);
							Label2 ->Caption="h1="+IntToStr(k2)+"/"+IntToStr(k3);
							a[i][j]=0;
							a[i-1][j]=0;
							Image1->Canvas->Brush->Color = clBlue;
							Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
							Image1 -> Canvas -> Draw(x2,y2,fon_pt);
							Image1 -> Canvas -> Draw(x2,y2-h1,fon_pt);
						}

						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==2)&&(a[i][j+1]==2)&&(flag4==0))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
						if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&
						(a[i][j]==4)&&(a[i][j-1]==4)&&(flag4==1))
						{
							flag1=1;
							Timer3->Enabled=false;
							Label1->Visible=true;
							Label1->Caption="Game over";
						}
				if((x1>=x2)&&(x1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==1))
				{
					flag2=1;
					Timer4->Enabled=false;
				}
				 if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2-h2)&&(y1<=y2)&&(a[i][j]!=1))
					Timer2->Enabled=true;
				 if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==5))
				 {
					if (flag==1)
					{
						Timer3->Enabled=false;
						flag1=1;
					}
						if (flag==0)
						{

							Image1->Canvas->Brush->Color = clGreen;
							Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
							Label1->Visible=true;
						}
					}
				}
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::BitBtn1Click(TObject *Sender)//p
{
	BitBtn1->Visible=false;
	BitBtn2->Visible=false;
	Image1 -> Canvas -> Draw(0,0,Fon1);
	Label1->Visible=false;
	Pr_kadr = Bounds (0,0, w1, h1);
	Pr_fon = Bounds (x1,y1, w1, h1);
	kadr -> Width = w1;
	kadr -> Height = h1;
	fon -> Width = w1;
	fon -> Height =h1;
	fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
	kadr1 -> Width = w1;
	kadr1 -> Height = h1;
	Pr_kadr1 = Bounds (0, 0, w1, h1);
	Pr_ris = Pr_kadr1;
	kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
	Image1 -> Canvas -> Draw(x1,y1,fon);
	for (int i=0; i<m; i++)
		for (int j=0; j<n; j++)
		{
			y2=h2*i;
			x2=w2*j;
			if(a[i][j]==1)
			{
				Image1->Canvas->Brush->Color = clBlue;
				Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
			}
			if(a[i][j]==5)
			{
				Image1->Canvas->Brush->Color = clRed;
				Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
			}
			if(a[i][j]==3)
			{
				fon_fish -> Width = w4;
				fon_fish -> Height =h4;
				Pr_fish= Bounds (0,0, w4, h4);
				Pr_fon_fish= Bounds(x2,y2, w4, h4);
				fon_fish -> Canvas -> CopyRect(Pr_fish, Image1 -> Canvas, Pr_fon_fish);
				k3++;
				Image1 -> Canvas -> Draw(x2,y2,fish);
			}
			if((a[i][j]==2)&&(a[i-1][j]==2))
				n1++;
			if((a[i][j]==4)&&(a[i][j+1]==4))
				n2++;
		}
		l1=0;
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
				do
				{
					if((a[i][j]==2)&&(a[i-1][j]==2))
					{
						a2[l1]=j;
						a3[l1]=i;
						a4[l1]=i;
						X[l1]=j*w2;
						Y[l1]=i*h2;
						Pr_kadr_pt[l1] = Bounds (0,0,w3, h3);
						fon_pt -> Width = w3;
						fon_pt -> Height =h3;
						Pr_fon_pt[l1] = Bounds (X[l1], Y[l1], w3, h3);
						fon_pt -> Canvas -> CopyRect(Pr_kadr_pt[l1], Image1 -> Canvas, Pr_fon_pt[l1]);
						l1++;
					 }
				}
				while (l1==n1);
		l2=0;
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
				do
				{
					if((a[i][j]==4)&&(a[i][j-1]==4))
					{
						b2[l2]=i;
						b3[l2]=j;
						b4[l2]=j;
						X2[l2]=j*w2;
						Y2[l2]=i*h2;
						Pr_kadr_pyl[l2] = Bounds (0,0,w5, h5);
						fon_pyl-> Width = w5;
						fon_pyl -> Height =h5;
						Pr_fon_pyl[l2] = Bounds (X2[l2], Y2[l2], w5, h5);
						fon_pyl -> Canvas -> CopyRect(Pr_kadr_pyl[l2], Image1 -> Canvas, Pr_fon_pyl[l2]);
						l2++;
					 }
				}
				while (l2==n2);


}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer7Timer(TObject *Sender)
{
	for (int l=0; l<n1; l++)
		{
			Image1 -> Canvas -> CopyRect(Pr_fon_pt[l], fon_pt -> Canvas, Pr_kadr_pt[l]);
			y3=h2*a3[l];
			x3=w2*a2[l];
			q=0;
			Pr_fon_pt[l] = Bounds (x3,y3, w3, h3);
			fon_pt -> Canvas -> CopyRect(Pr_kadr_pt[l], Image1 -> Canvas, Pr_fon_pt[l]);
			a3[l]--;
			q=a4[0]-a3[0];
		   if (a3[0]==a4[0])
			flag3=0;
	   else
		   flag3=1;
			Image1 -> Canvas -> Draw(x3,y3,pt);
		   //	Label3->Caption=IntToStr(flag3);
		}
	if (q>0)
	{
		Timer7->Enabled=false;
		Timer8->Enabled=true;
	}



}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer8Timer(TObject *Sender)
{
	for (int l=0; l<n1; l++)
	{
		Image1 -> Canvas -> CopyRect(Pr_fon_pt[l], fon_pt -> Canvas, Pr_kadr_pt[l]);
		y3=h2*a3[l];
		x3=w2*a2[l];
		q=0;
		//fon_pt -> Width = w3;
		//fon_pt -> Height =h3;
		Pr_fon_pt[l] = Bounds (x3,y3, w3, h3);
		//Pr_kadr_pt = Bounds (0,0, w3, h3);
		fon_pt -> Canvas -> CopyRect(Pr_kadr_pt[l], Image1 -> Canvas, Pr_fon_pt[l]);
		a3[l]++;
		q=a4[0]-a3[0];
		if (a3[0]==a4[0])
			flag3=0;
	   else
		   flag3=1;
		Image1 -> Canvas -> Draw(x3,y3,pt);
		//Label3->Caption=IntToStr(flag3);
		//Image1 -> Canvas -> Draw(x3,y3,fon_pt);
	}
	if (q<1)
	{
		//flag3=1;
		Timer7->Enabled=true;
		Timer8->Enabled=false;
	}

}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer5Timer(TObject *Sender)
{   if (k2<k3)
		flag=1;
	if (k2>=k3)
		flag=0;
	for (int l=0; l<n2; l++)
		{
			Image1 -> Canvas -> CopyRect(Pr_fon_pyl[l], fon_pyl -> Canvas, Pr_kadr_pyl[l]);
			y5=h2*b2[l];
			x5=w2*b3[l];
			q2=0;
			Pr_fon_pyl[l] = Bounds (x5,y5, w5, h5);
			fon_pyl -> Canvas -> CopyRect(Pr_kadr_pyl[l], Image1 -> Canvas, Pr_fon_pyl[l]);
			b3[l]--;
			q2=b4[0]-b3[0];
		   if (b3[0]==b4[0])
			flag4=0;
	   else
		   flag4=1;
			Image1 -> Canvas -> Draw(x5,y5,pyl);
		   //	Label3->Caption=IntToStr(flag3);
		}
	if (q2>0)
	{
		Timer5->Enabled=false;
		Timer6->Enabled=true;
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer6Timer(TObject *Sender)
{
	if (k2<k3)
		flag=1;
	if (k2>=k3)
		flag=0;
	if (k2>=k3)
	{
		flag=0;
		Image1->Canvas->Brush->Color = clGreen;
		Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
	}
for (int l=0; l<n2; l++)
		{
			Image1 -> Canvas -> CopyRect(Pr_fon_pyl[l], fon_pyl -> Canvas, Pr_kadr_pyl[l]);
			y5=h2*b2[l];
			x5=w2*b3[l];
			q2=0;
			Pr_fon_pyl[l] = Bounds (x5,y5, w5, h5);
			fon_pyl -> Canvas -> CopyRect(Pr_kadr_pyl[l], Image1 -> Canvas, Pr_fon_pyl[l]);
			b3[l]++;
			q2=b4[0]-b3[0];
		   if (b3[0]==b4[0])
			flag4=0;
	   else
		   flag4=1;
			Image1 -> Canvas -> Draw(x5,y5,pyl);
		   //	Label3->Caption=IntToStr(flag3);
		}
	if (q2<1)
	{
		Timer6->Enabled=false;
		Timer5->Enabled=true;
	}

}
//---------------------------------------------------------------------------
void __fastcall TForm2::BitBtn2Click(TObject *Sender)
{
 k++;
 if (k==1)
  {
  BitBtn1->Visible=false;
	BitBtn2->Visible=false;
	Label1->Visible=false;
	Image1 -> Canvas -> Draw(0,0,Fon1);
	Pr_kadr = Bounds (0,0, w1, h1);
	Pr_fon = Bounds (x1,y1, w1, h1);
	kadr -> Width = w1;
	kadr -> Height = h1;
	fon -> Width = w1;
	fon -> Height =h1;
	fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
	kadr1 -> Width = w1;
	kadr1 -> Height = h1;
	Pr_kadr1 = Bounds (0, 0, w1, h1);
	Pr_ris = Pr_kadr1;
	kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
	Image1 -> Canvas -> Draw(x1,y1,fon);
	for (int i=0; i<m; i++)
		for (int j=0; j<n; j++)
		{
			y2=h2*i;
			x2=w2*j;
			if(a[i][j]==1)
			{
				Image1->Canvas->Brush->Color = clBlue;
				Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
			}
			if(a[i][j]==5)
			{
				Image1->Canvas->Brush->Color = clRed;
				Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
			}
			if(a[i][j]==3)
			{
				fon_fish -> Width = w4;
				fon_fish -> Height =h4;
				Pr_fish= Bounds (0,0, w4, h4);
				Pr_fon_fish= Bounds(x2,y2, w4, h4);
				fon_fish -> Canvas -> CopyRect(Pr_fish, Image1 -> Canvas, Pr_fon_fish);
				k3++;
				Image1 -> Canvas -> Draw(x2,y2,fish);
			}
			if((a[i][j]==2)&&(a[i-1][j]==2))
				n1++;
			if((a[i][j]==4)&&(a[i][j+1]==4))
				n2++;
		}
		l1=0;
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
				do
				{
					if((a[i][j]==2)&&(a[i-1][j]==2))
					{
						a2[l1]=j;
						a3[l1]=i;
						a4[l1]=i;
						X[l1]=j*w2;
						Y[l1]=i*h2;
						Pr_kadr_pt[l1] = Bounds (0,0,w3, h3);
						fon_pt -> Width = w3;
						fon_pt -> Height =h3;
						Pr_fon_pt[l1] = Bounds (X[l1], Y[l1], w3, h3);
						fon_pt -> Canvas -> CopyRect(Pr_kadr_pt[l1], Image1 -> Canvas, Pr_fon_pt[l1]);
						l1++;
					 }
				}
				while (l1==n1);
		l2=0;
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
				do
				{
					if((a[i][j]==4)&&(a[i][j-1]==4))
					{
						b2[l2]=i;
						b3[l2]=j;
						b4[l2]=j;
						X2[l2]=j*w2;
						Y2[l2]=i*h2;
						Pr_kadr_pyl[l2] = Bounds (0,0,w5, h5);
						fon_pyl-> Width = w5;
						fon_pyl -> Height =h5;
						Pr_fon_pyl[l2] = Bounds (X2[l2], Y2[l2], w5, h5);
						fon_pyl -> Canvas -> CopyRect(Pr_kadr_pyl[l2], Image1 -> Canvas, Pr_fon_pyl[l2]);
						l2++;
					 }
				}
				while (l2==n2);
 }
}
//---------------------------------------------------------------------------

