//---------------------------------------------------------------------------
#include <vcl.h>
#pragma hdrstop
#include <string>
#include <stdlib.h>
#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
using namespace std;
#include "Unit2.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
int r=5,w1,h1,w2,h2,W,H,
x,y,x1,y1,x2,y2,x3,y3,x4,y4,
j,l,i,n1,n=20, m=20,
flag1,flag2,k,k2,q;
//x1_fon,y1_fon,h_fon,w_fon,x2_fon,y2_fon;
std::ifstream fin("map1.txt");
std::ofstream fout("output.txt");
Graphics::TBitmap
*kadr1=new Graphics::TBitmap(),*kadr=new Graphics::TBitmap(),
 *ris=new Graphics::TBitmap() , *fon=new Graphics::TBitmap();
 //*kadr_fon2=new Graphics::TBitmap(), *fon_fon1=new Graphics::TBitmap(),
 //*kadr_fon1=new Graphics::TBitmap(),*fon_fon2=new Graphics::TBitmap();
 TRect Pr_fon, Pr_kadr, Pr_kadr1,Pr_kadr2,
 Pr_ris,Pr_ris1;
 //Pr_fon_fon1, Pr_kadr_fon1,Pr_fon_fon2, Pr_kadr_fon2,Pr_fon_pr, Pr_kadr_pr;
int a[20][20]={
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,1,0,0,2,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,1,0,0,2,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,2,0,1,
1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,2,0,1,
0,0,0,0,2,0,0,0,0,1,2,0,0,0,0,1,0,0,0,1,
0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,1,0,0,0,0,
0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,
1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,
0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,0,0,1,
1,0,0,0,0,1,1,0,0,1,1,0,0,2,0,0,0,0,0,1,
1,0,0,1,1,0,0,1,1,1,1,0,0,2,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,
1,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,
1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,
1,1,1,0,0,1,1,0,0,0,0,2,0,0,0,1,1,0,0,1,
1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,};
int a2[20];
int a3[20];
int a4[20];



//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
 //kadr_fon1 -> LoadFromFile("bitb.BMP");
	   //kadr_fon1 -> Transparent = true;
	   //kadr_fon2 -> LoadFromFile("bitb2.BMP");
	   //kadr_fon2 -> Transparent = true;
	   //w_fon = kadr_fon1 -> Width;
	  // h_fon = kadr_fon1 -> Height;
	   //Pr_kadr_fon1 = Bounds (0, 0, w_fon, h_fon);
	   //Pr_kadr_fon2 = Bounds (0, 0, w_fon, h_fon);
	   //x1_fon =0;
	   //y1_fon = 0;
	   //x2_fon =-w_fon;
	   //y2_fon = 0;
	  // fon_fon1 -> Width = w_fon;
	  // fon_fon1 -> Height =h_fon;
	 //  fon_fon2 -> Width = w_fon;
	  // fon_fon2 -> Height =h_fon;
	//   Pr_fon_fon1 = Bounds (x1_fon, y1_fon, w_fon, h_fon);
	 //  Pr_fon_fon2 = Bounds (x2_fon, y2_fon, w_fon, h_fon);
	  // fon_fon1 -> Canvas -> CopyRect(Pr_kadr_fon1, Image1 -> Canvas, Pr_fon_fon1);
	  // fon_fon2 -> Canvas -> CopyRect(Pr_kadr_fon2, Image1 -> Canvas, Pr_fon_fon2);
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormKeyPress(TObject *Sender, wchar_t &Key)
{
if(Key==32)
Timer1->Enabled=true;
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer1Timer(TObject *Sender)//up
{
if((Timer3->Enabled==false)&&(Timer4->Enabled==false))
{
		 Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
			 y1--;
			 k++;
	 if (y1 < Image1 -> Width)
	 Pr_fon = Bounds (x1,y1, w1, h1);
	 fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);

	 y+=h1;
	 if (y > 11*h1)
	 y=0;

	 Pr_ris = Bounds(0, y+3,w1, h1);
	 kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
	 Image1 -> Canvas -> Draw(x1,y1,kadr1);
	   if (k >h1)
	 {
	  Timer2->Enabled=true;
	  Timer1->Enabled=false;
	  k=0;
	 }
	 for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==1))  ////////////////
					{
					Timer2->Enabled=true;
					Timer1->Enabled=false;
					k=0;
					}
					if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
					{
					  k2++;
					  Edit1->Text="h1="+IntToStr(k2);
					  a[i][j]=0;
					  Image1->Canvas->Brush->Color = clBlue;
				  Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					}
			}
}
 if(Timer3->Enabled==true)
 {
		 Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
			 y1--;
			 x1++;
			 k++;
	if (x1 > Image1 -> Width)
		x1 = -w1;
	 if (y1 < Image1 -> Width)
	 Pr_fon = Bounds (x1,y1, w1, h1);
	 fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);

	 y+=h1;
	 if (y > 11*h1)
	 y=0;

	 Pr_ris = Bounds(0, y+3,w1, h1);
	 kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
	 Image1 -> Canvas -> Draw(x1,y1,kadr1);
	   if (k >h1)
	 {
	  Timer2->Enabled=true;
	  Timer1->Enabled=false;
	  k=0;
	 }
	 for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==1))  ////////////////
					{
					Timer2->Enabled=true;
					Timer1->Enabled=false;
					k=0;
					}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
					{
					  k2++;
					  Edit1->Text="h1="+IntToStr(k2);
					  a[i][j]=0;
					  Image1->Canvas->Brush->Color = clBlue;
				  Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					}
			}
}
 if(Timer4->Enabled==true)
 {
		 Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
			 y1--;
			 x1--;
			 k++;
 	 if (x1 < 0 )
		x1 = Image1 -> Width+w1;
	 if (y1 < Image1 -> Width)
	 Pr_fon = Bounds (x1,y1, w1, h1);
	 fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);

	 y+=h1;
	 if (y > 11*h1)
	 y=0;

	 Pr_ris = Bounds(0, y+3,w1, h1);
	 Pr_ris1.Left=Pr_ris.Right;
	Pr_ris1.Right=Pr_ris.Left;
	Pr_ris1.Top=Pr_ris.Top;
	Pr_ris1.Bottom=Pr_ris.Bottom;
	 kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris1);
	 Image1 -> Canvas -> Draw(x1,y1,kadr1);
	   if (k >h1)
	 {
	  Timer2->Enabled=true;
	  Timer1->Enabled=false;
	  k=0;
	 }
	 for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==1))  ////////////////
					{
					Timer2->Enabled=true;
					Timer1->Enabled=false;
					k=0;
					}
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
					{
					  k2++;
					  Edit1->Text="h1="+IntToStr(k2);
					  a[i][j]=0;
					  Image1->Canvas->Brush->Color = clBlue;
				  Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					}
			}
}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer2Timer(TObject *Sender)//down
{
Timer1->Enabled=false;
if((Timer3->Enabled==false)&&(Timer4->Enabled==false))
{
	  Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
			 y1++;
	 if (y1 < Image1 -> Width)
	 Pr_fon = Bounds (x1,y1, w1, h1);
	 fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);

	 y+=h1;
	 if (y > 11*h1)
	 y=0;

	 Pr_ris = Bounds(0, y+3,w1, h1);
	 kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
	 Image1 -> Canvas -> Draw(x1,y1,kadr1);
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2-h2)&&(y1<=y2)&&(a[i][j]==1))
					Timer2->Enabled=false;
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
					{
					  k2++;
					  Edit1->Text="h1="+IntToStr(k2);
					  a[i][j]=0;
					  Image1->Canvas->Brush->Color = clBlue;
				  Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					}
			}
}
 if(Timer3->Enabled==true)
{
	  Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
			 y1++;
			 x1++;
	  if (x1 > Image1 -> Width)
	  x1 = -w1;
	 if (y1 < Image1 -> Width)
	 Pr_fon = Bounds (x1,y1, w1, h1);
	 fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);

	 y+=h1;
	 if (y > 11*h1)
	 y=0;

	 Pr_ris = Bounds(0, y+3,w1, h1);
	 kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
	 Image1 -> Canvas -> Draw(x1,y1,kadr1);
	   for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2-h2)&&(y1<=y2)&&(a[i][j]==1))
					Timer2->Enabled=false;
					if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
					{
					  k2++;
					  Edit1->Text="h1="+IntToStr(k2);
					  a[i][j]=0;
					  Image1->Canvas->Brush->Color = clBlue;
				  Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					}
			}
}
 if(Timer4->Enabled==true)
{
	  Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
			 y1++;
			 x1--;
	  if (x1 < 0 )
		x1 = Image1 -> Width;
	 if (y1 < Image1 -> Width)
	 Pr_fon = Bounds (x1,y1, w1, h1);
	 fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);

	 y+=h1;
	 if (y > 11*h1)
	 y=0;

	 Pr_ris = Bounds(0, y+3,w1, h1);
	  Pr_ris1.Left=Pr_ris.Right;
	Pr_ris1.Right=Pr_ris.Left;
	Pr_ris1.Top=Pr_ris.Top;
	Pr_ris1.Bottom=Pr_ris.Bottom;
	 kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris1);
	 Image1 -> Canvas -> Draw(x1,y1,kadr1);
	   for (int i=0; i<m; i++)
			for (int j=0; j<n; j++)
			{
				y2=h2*i;
				x2=w2*j;
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2-h2)&&(y1<=y2)&&(a[i][j]==1))
					Timer2->Enabled=false;
					if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
					{
					  k2++;
					  Edit1->Text="h1="+IntToStr(k2);
					  a[i][j]=0;
					  Image1->Canvas->Brush->Color = clBlue;
				  Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					}
			}
}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormKeyUp(TObject *Sender, WORD &Key, TShiftState Shift)//stop

{
if(Key==77)
Timer3->Enabled=false;
if (Key==78)
Timer4->Enabled=false;
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormKeyDown(TObject *Sender, WORD &Key, TShiftState Shift)//move
{
if((Key==77)&&(flag1==0))
{
Timer3->Enabled=true;
flag2=0;
}
if ((Key==78)&&(flag2==0))
{
Timer4->Enabled=true;
flag1=0;
}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer3Timer(TObject *Sender)//right
{
			if((Timer1->Enabled==false)&&(Timer2->Enabled==false))
			{
				Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
				x1++;
				if (x1 > Image1 -> Width)
					x1 = -w1;
				Pr_fon = Bounds (x1,y1, w1, h1);
				fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);
				y+=h1;
				if (y > 11*h1)
					y=0;
				Pr_ris = Bounds(2*w1, y+3,w1, h1);
				kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
				Image1 -> Canvas -> Draw(x1,y1,kadr1);
				for (int i=0; i<m; i++)
					for (int j=0; j<n; j++)
				{
				y2=h2*i;
				x2=w2*j;
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
					{
					  k2++;
					  Edit1->Text="h1="+IntToStr(k2);
					  a[i][j]=0;
					  Image1->Canvas->Brush->Color = clBlue;
				  Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					}
				if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==1))
					{
					flag1=1;
					Timer3->Enabled=false;
					}
					if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1-h2>=y2)&&(y1-h2<=y2+h2)&&(a[i][j]==1))
					{
					flag1=1;
					Timer3->Enabled=false;
					}
				if((x1+w1>=x2)&&(x1+w2<=x2+w2)&&(y1>=y2-h2)&&(y1<=y2)&&(a[i][j]!=1))
					Timer2->Enabled=true;
				}
  }
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer4Timer(TObject *Sender)//levo
{
if((Timer1->Enabled==false)&&(Timer2->Enabled==false))
{
  Image1 -> Canvas -> CopyRect(Pr_fon, fon -> Canvas, Pr_kadr);
			 x1--;
	 if (x1 < 0 )
		x1 = Image1 -> Width+w1;
	 Pr_fon = Bounds (x1,y1, w1, h1);
	 fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);

	 y+=h1;
	 if (y > 11*h1)
		 y=0;
	 Pr_ris = Bounds(2*w1, y+3,w1, h1);
	 Pr_ris1.Left=Pr_ris.Right;
	Pr_ris1.Right=Pr_ris.Left;
	Pr_ris1.Top=Pr_ris.Top;
	Pr_ris1.Bottom=Pr_ris.Bottom;

	 kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris1);
	 Image1 -> Canvas -> Draw(x1,y1,kadr1);
	 for (int i=0; i<m; i++)
					for (int j=0; j<n; j++)
				{
				y2=h2*i;
				x2=w2*j;
				if((x1<=x4)&&(x1+w1>=x4)&&(y1<=y4)&&(y1+h1>=y4)&&(a[i][j]==3))
					{
					  k2++;
					  Edit1->Text="h1="+IntToStr(k2);
					  a[i][j]=0;
					  Image1->Canvas->Brush->Color = clBlue;
				  Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					}
				if((x1>=x2)&&(x1<=x2+w2)&&(y1>=y2)&&(y1<=y2+h2)&&(a[i][j]==1))
				{
					flag2=1;
					Timer4->Enabled=false;
				}
				 if((x1+w1>=x2)&&(x1+w1<=x2+w2)&&(y1>=y2-h2)&&(y1<=y2)&&(a[i][j]!=1))
					Timer2->Enabled=true;
				 }
}
}
//---------------------------------------------------------------------------
void __fastcall TForm2::BitBtn1Click(TObject *Sender)//p
{
H = Image1-> Height;
W = Image1 -> Width;
w2= W/20;
h2=H/20;
BitBtn1->Visible=false;
ris -> LoadFromFile("an13.BMP");
kadr1 -> Transparent = true;
	   w1 = ris -> Width/3;
	   h1 = ris -> Height/13;
		x1 = 0;
		y1=H/2-h1;
	   Pr_kadr = Bounds (0,0, w1, h1);
	   Pr_fon = Bounds (x1,y1, w1, h1);
	   kadr -> Width = w1;
	   kadr -> Height = h1;
	   fon -> Width = w1;
	   fon -> Height =h1;
	   fon -> Canvas -> CopyRect(Pr_kadr, Image1 -> Canvas, Pr_fon);

	   fon -> Width = w1;
	   fon -> Height =h1;

		kadr1 -> Width = w1;
	   kadr1 -> Height = h1;
	   Pr_kadr1 = Bounds (0, 0, w1, h1);
	   Pr_ris = Pr_kadr1;
	   kadr1 -> Canvas -> CopyRect(Pr_kadr1, ris -> Canvas, Pr_ris);
	 Image1 -> Canvas -> Draw(x1,y1,fon);
		for (int i=0; i<m; i++)
					for (int j=0; j<n; j++)
				{
				y2=h2*i;
				x2=w2*j;
				if(a[i][j]==1)
					{
					Image1->Canvas->Brush->Color = clBlue;
				  Image1 -> Canvas -> Rectangle(x2,y2,x2+w2,y2+h2);
					}
					if(a[i][j]==3)
					{
					Image1->Canvas->Brush->Color = clGreen;
					x4=x2+w2/2;
					y4=y2+h2/2;
				  Image1 -> Canvas -> Ellipse(x4-r,y4-r,x4+r,y4+r);
					}
						if((a[i][j]==2)&&(a[i-1][j]==2))
						n1++;
					}
				   l=0;
						for (int i=0; i<m; i++)
					for (int j=0; j<n; j++)
						do
					{
				if((a[i][j]==2)&&(a[i-1][j]==2))
					{
					a2[l]=j;
					a3[l]=i;
					a4[l]=i;
					Image1->Canvas->Brush->Color = clBlue;
				  Image1 -> Canvas -> Ellipse(x2,y2,x2+w2,y2+h2);
					l++;
					 }
					}
					while (l==n1);

}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer5Timer(TObject *Sender)
{
	 //Image1 -> Canvas -> CopyRect(Pr_fon_fon1, fon_fon1 -> Canvas, Pr_kadr_fon1);
	// x1_fon+=60;
	// if (x1_fon > Image1 -> Width)
	   //	x1_fon = 0;
   //	 Pr_fon_fon1 = Bounds (x1_fon, y1_fon, w_fon, h_fon);
	// fon_fon1 -> Canvas -> CopyRect(Pr_kadr_fon1, Image1 -> Canvas, Pr_fon_fon1);
	// Image1 -> Canvas -> Draw(x1_fon, y1_fon, kadr_fon1);
	// Image1 -> Canvas -> Draw(x1_fon, y1_fon, kadr_fon1);



}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer6Timer(TObject *Sender)
{

	// Image1 -> Canvas -> CopyRect(Pr_fon_fon2, fon_fon2 -> Canvas, Pr_kadr_fon2);
	 //x2_fon+=60;
	//if (x2_fon > Image1 -> Width)
		//x2_fon =0;
	// Pr_fon_fon2 = Bounds (x2_fon, y2_fon, w_fon, h_fon);
	// fon_fon2 -> Canvas -> CopyRect(Pr_kadr_fon2, Image1 -> Canvas, Pr_fon_fon2);
	 //Image1 -> Canvas -> Draw(x2_fon, y2_fon, kadr_fon2);



}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer7Timer(TObject *Sender)
{

	for (int l=0; l<n1; l++)
		{

						int y3=h2*a3[l];
						int x3=w2*a2[l];
						q=0;
					Image1 -> Canvas -> Ellipse(x3,y3,x3+w2,y3+h2);
					Image1->Canvas->Brush->Color = clRed;
					a3[l]--;
					 q=a4[0]-a3[0];
					Image1 -> Canvas -> Ellipse(x3,y3,x3+w2,y3+h2);
		}
if (q>1)

	{
						 Timer7->Enabled=false;
						 Timer8->Enabled=true;
	}



}
//---------------------------------------------------------------------------
void __fastcall TForm2::Timer8Timer(TObject *Sender)
{
 for (int l=0; l<n1; l++)
		{

						int y3=h2*a3[l];
						int x3=w2*a2[l];
						q=0;
					//Image1 -> Canvas -> Ellipse(x3,y3,x3+w2,y3+h2);
					//Image1->Canvas->Brush->Color = clYellow;
					a3[l]++;
					 q=a4[0]-a3[0];
					 Image1->Canvas->Brush->Color = clYellow;
					Image1 -> Canvas -> Ellipse(x3,y3+h2,x3+w2,y3+2*h2);
		}
if (q<1)
	 {
	   Timer7->Enabled=true;
	   Timer8->Enabled=false;
	}

}
//---------------------------------------------------------------------------

